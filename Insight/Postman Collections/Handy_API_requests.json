{
	"info": {
		"_postman_id": "33b3645e-5ee8-48dc-a6a7-d5b073aadaaf",
		"name": "[IS] Handy API requests",
		"description": "This collection will import locations from a .csv\n\nAuthor: Hern√°n Aranda (a.k.a. Hernium)\n\n# Prerequisites\n\nCheck this article to prepare everything you need: [https://github.com/hernan-aranda/invgate-implementor-toolbox#how-to-use-this-resources](https://github.com/hernan-aranda/invgate-implementor-toolbox#how-to-use-this-resources)\n\n# Template\n\n| **Column** | **Description** |\n| --- | --- |\n| locationName | Required. Name of the location to be created. |\n| locationParent | Optional. Name of the parent location. It's only needed if this location is not a root level location. |\n\nSource: [https://docs.google.com/spreadsheets/d/10cN2GcwdoPv8x8-5K6YKi1zdxbbaGsW_IWTTL9CuGnY/view#gid=1944844226](https://docs.google.com/spreadsheets/d/10cN2GcwdoPv8x8-5K6YKi1zdxbbaGsW_IWTTL9CuGnY/view#gid=1944844226)\n\n# Execution\n\n1. Set and select the enviroment, or replace the enviroment variables with your constants\n2. Create the .csv file. Make sure that your rows are ordered by depth\n3. Run the collection using the .csv file\n    \n\n# Requests",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Assets",
			"item": [
				{
					"name": "/assets-lite/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f67c8b10-f1bb-4064-968e-f384624e5e1b",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"_postman_id": "8f7dd0e0-a8c3-4f30-b8c2-a973f89e7ecd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{IS Protocol}}://{{IS Instance}}/public-api/assets-lite/",
							"protocol": "{{IS Protocol}}",
							"host": [
								"{{IS Instance}}"
							],
							"path": [
								"public-api",
								"assets-lite",
								""
							],
							"query": [
								{
									"key": "inventory_id",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "name",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "owner__email",
									"value": null,
									"disabled": true
								},
								{
									"key": "owner__name",
									"value": null,
									"disabled": true
								},
								{
									"key": "serial",
									"value": null,
									"disabled": true
								},
								{
									"key": "status_behavior",
									"value": null,
									"disabled": true
								},
								{
									"key": "status_name",
									"value": null,
									"disabled": true
								},
								{
									"key": "device_model__model",
									"value": null,
									"disabled": true
								},
								{
									"key": "owner",
									"value": null,
									"disabled": true
								},
								{
									"key": "keyword",
									"value": null,
									"disabled": true
								},
								{
									"key": "keyword_exact",
									"value": null,
									"disabled": true
								},
								{
									"key": "asset_type",
									"value": null,
									"disabled": true
								},
								{
									"key": "location_ids",
									"value": null,
									"disabled": true
								},
								{
									"key": "location_ids_or_location_empty",
									"value": null,
									"disabled": true
								},
								{
									"key": "owner_is_empty",
									"value": null,
									"disabled": true
								},
								{
									"key": "location_is_empty",
									"value": null,
									"disabled": true
								},
								{
									"key": "status_ids",
									"value": null,
									"disabled": true
								},
								{
									"key": "tag_ids",
									"value": null,
									"disabled": true
								},
								{
									"key": "asset_types",
									"value": null,
									"disabled": true
								},
								{
									"key": "ordering",
									"value": null,
									"disabled": true
								},
								{
									"key": "page",
									"value": null,
									"disabled": true
								},
								{
									"key": "page_size",
									"value": null,
									"disabled": true
								},
								{
									"key": "include",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "Lightweight list assets.\n\nEndpoint doc.: [https://webdemo.is.cloud.invgate.net/public-api/swagger/#/assets-lite/assets-lite_list](https://webdemo.is.cloud.invgate.net/public-api/swagger/#/assets-lite/assets-lite_list)"
					},
					"response": []
				},
				{
					"name": "/assets-lite/{id}/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f67c8b10-f1bb-4064-968e-f384624e5e1b",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"_postman_id": "000af071-85fa-4f60-bf4f-ff17349645ae",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"type": "text"
							}
						],
						"url": "{{IS Protocol}}://{{IS Instance}}/public-api/assets-lite/{{COMPLETE WITH THE ID}}/",
						"description": "Lightweight retrieve an asset.\n\nEndpoint doc.: [https://webdemo.is.cloud.invgate.net/public-api/swagger/#/assets-lite/assets-lite_read](https://webdemo.is.cloud.invgate.net/public-api/swagger/#/assets-lite/assets-lite_read)"
					},
					"response": []
				}
			],
			"_postman_id": "eb1dcc1b-b884-4e83-b1b3-f18d2b313a46",
			"description": "Requests related to Assets."
		},
		{
			"name": "Locations",
			"item": [
				{
					"name": "/locations/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f67c8b10-f1bb-4064-968e-f384624e5e1b",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"_postman_id": "edcf9c02-c001-4c75-8163-7c572038301f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"type": "text"
							}
						],
						"url": "{{IS Protocol}}://{{IS Instance}}/public-api/locations/",
						"description": "List locations.\n\nEndpoint doc.: [https://webdemo.is.cloud.invgate.net/public-api/swagger/#/locations/locations_list](https://webdemo.is.cloud.invgate.net/public-api/swagger/#/locations/locations_list)"
					},
					"response": []
				}
			],
			"_postman_id": "2baf9a05-27e3-4e6c-a52e-e540afae3954",
			"description": "Requests related to Locations."
		},
		{
			"name": "People",
			"item": [
				{
					"name": "/people/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f67c8b10-f1bb-4064-968e-f384624e5e1b",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"_postman_id": "be87e28f-0bd3-4ab1-ac1d-f3e83188e26e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"type": "text"
							}
						],
						"url": "{{IS Protocol}}://{{IS Instance}}/public-api/people/",
						"description": "Creates a location.\n\nEndpoint doc.: [https://webdemo.is.cloud.invgate.net/public-api/swagger/#/locations/locations_create](https://webdemo.is.cloud.invgate.net/public-api/swagger/#/locations/locations_create)"
					},
					"response": []
				}
			],
			"_postman_id": "fd16c9ba-36eb-46ad-8774-6b8fad8917fc",
			"description": "List people.\n\nEndpoint doc.: [https://webdemo.is.cloud.invgate.net/public-api/swagger/#/people/people_list](https://webdemo.is.cloud.invgate.net/public-api/swagger/#/people/people_list)"
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": {
			"scope": "",
			"clientSecret": "{{IS API Secret}}",
			"clientId": "{{IS API Client}}",
			"accessTokenUrl": "{{IS Protocol}}://{{IS Instance}}/{{IS API Token}}/",
			"tokenName": "{{IS Instance}}_{{$isoTimestamp}}",
			"challengeAlgorithm": "S256",
			"grant_type": "client_credentials",
			"addTokenTo": "queryParams",
			"client_authentication": "body"
		}
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "3a9c9c85-66e4-489b-864f-ae04f4182771",
				"type": "text/javascript",
				"exec": [
					"/**",
					" * We use this script to get a new token if there's none or expired.",
					" * This automate the process of getting a new one manually.",
					" */ ",
					"",
					"const oAuthUrl = pm.environment.get('IS Protocol') + '://' + pm.environment.get('IS Instance') + '/' + pm.environment.get('IS API Token') + '/';",
					"const oAuthBody = 'grant_type=client_credentials&client_id=' + pm.environment.get('IS API Client') + '&client_secret=' + pm.environment.get('IS API Secret');",
					"",
					"const oAuthRequest = {",
					"    url: oAuthUrl,",
					"    method: 'POST',",
					"    timeout: 0,",
					"    header: {",
					"        \"Content-Type\": \"application/x-www-form-urlencoded\"",
					"    },",
					"    body: {",
					"        mode: \"raw\",",
					"        raw: oAuthBody",
					"    }",
					"};",
					"",
					"let getToken = true;",
					"",
					"if (!pm.environment.get('IS Access Token Expiry') || !pm.environment.get('IS Access Token')) {",
					"    // console.log('Token or expiry date are missing');",
					"} else if ( pm.environment.get('IS Access Token Expiry') <= (new Date()).getTime() ) {",
					"    // console.log('Token is expired');",
					"} else {",
					"    getToken = false;",
					"    // console.log('Token and expiry date are all good');",
					"}",
					"",
					"if ( getToken === true ) {",
					"    pm.sendRequest(oAuthRequest, function ( error, response ) {",
					"    // console.log( error ? error : response.json() );",
					"        if (error === null) {",
					"            // console.log('Saving the token and expiry date');",
					"            let responseJson = response.json();",
					"            pm.environment.set('IS Access Token', responseJson.access_token)",
					"    ",
					"            let expiryDate = new Date();",
					"            expiryDate.setSeconds(expiryDate.getSeconds() + responseJson.expires_in);",
					"            pm.environment.set('IS Access Token Expiry', expiryDate.getTime());",
					"        }",
					"    });",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "b0f5d2ea-9988-43a9-80ae-dac8e5bdb39f",
				"type": "text/javascript",
				"exec": [
					"",
					"// If we got a 200, the request was executed succesfully",
					"pm.test(\"Status test\", function () {",
					"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
					"});"
				]
			}
		}
	]
}